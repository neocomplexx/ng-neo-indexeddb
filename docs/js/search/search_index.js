var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.716,1,0.888]],["body/components/AppComponent.html",[0,1.305,1,1.66,2,0.657,3,0.657,4,2.58,5,2.58,6,0.508,7,1.568,8,2.58,9,2.833,10,2.833,11,2.553,12,1.66,13,0.084,14,2.553,15,2.553,16,2.032,17,2.032,18,2.032,19,1.97,20,1.97,21,2.553,22,1.568,23,1.568,24,1.268,25,0.061,26,1.568,27,1.268,28,1.028,29,1.97,30,1.568,31,3.344,32,3.344,33,3.344,34,2.997,35,2.58,36,1.643,37,2.58,38,0.061,39,0.061]],["title/modules/AppModule.html",[28,0.888,40,0.568]],["body/modules/AppModule.html",[0,1.066,1,1.766,2,0.65,3,0.65,6,0.502,7,1.55,9,1.948,10,1.948,11,1.948,12,1.655,13,0.084,14,2.534,15,2.534,16,2.017,17,2.017,18,2.017,19,1.948,20,1.948,21,2.534,22,1.55,23,1.55,24,1.253,25,0.06,26,2.242,27,1.813,28,1.685,29,1.948,30,1.55,38,0.06,39,0.06,40,0.846,41,1.253,42,1.253,43,0.65,44,1.948,45,1.948,46,1.948,47,2.534,48,1.948,49,1.948,50,2.551,51,2.551]],["title/classes/DbWrapper.html",[25,0.04,52,1.095]],["body/classes/DbWrapper.html",[2,0.502,3,0.502,6,0.388,13,0.083,25,0.051,36,1.726,38,0.051,39,0.051,43,0.502,52,1.369,53,1.506,54,0.633,55,1.369,56,2.682,57,2.937,58,3.513,59,2.128,60,2.787,61,2.787,62,2.787,63,0.969,64,2.128,65,2.605,66,2.135,67,2.937,68,2.403,69,2.787,70,2.135,71,1.636,72,2.252,73,3.233,74,1.972,75,1.972,76,2.787,77,2.787,78,1.972,79,1.821,80,3.233,81,2.787,82,1.964,83,2.135,84,1.972,85,2.682,86,1.506,87,2.787,88,1.972,89,1.972,90,1.972,91,1.198,92,2.128,93,1.972,94,1.972,95,1.972,96,1.506,97,1.506,98,1.198,99,1.972,100,1.506,101,1.972,102,1.506,103,1.972,104,1.972,105,1.972,106,1.506,107,1.972,108,1.198,109,2.468,110,2.468,111,1.506,112,1.506,113,2.787,114,1.972,115,1.972,116,1.972,117,1.972,118,1.972,119,1.972,120,1.972,121,1.972]],["title/interfaces/IndexDetails.html",[122,1.095,123,0.888]],["body/interfaces/IndexDetails.html",[2,0.807,3,0.807,6,0.623,13,0.08,38,0.069,39,0.069,43,0.807,54,1.017,55,1.867,65,2.665,71,1.514,122,1.867,123,1.514,124,2.419,125,2.566,126,2.566]],["title/classes/NgxIDB.html",[25,0.04,127,0.888]],["body/classes/NgxIDB.html",[2,0.214,3,0.214,6,0.165,12,0.742,13,0.085,25,0.026,36,1.593,38,0.034,39,0.026,43,0.214,52,1.476,54,0.598,55,0.702,57,0.642,59,1.091,63,0.413,64,1.091,65,2.499,66,1.734,67,2.043,68,2.08,70,1.97,71,1.364,72,1.97,79,1.855,82,2.267,83,2.029,85,3.038,86,1.091,98,0.868,106,2.294,108,1.903,109,3.058,110,3.11,111,2.294,112,1.879,123,1.197,125,1.132,126,0.868,127,0.569,128,0.642,129,1.539,130,1.091,131,1.091,132,1.091,133,1.091,134,1.091,135,1.091,136,1.091,137,1.091,138,1.429,139,0.841,140,1.091,141,2.294,142,2.943,143,0.841,144,2.676,145,1.091,146,0.841,147,1.091,148,0.841,149,1.091,150,2.043,151,2.043,152,0.841,153,1.091,154,0.841,155,1.091,156,0.841,157,1.091,158,1.422,159,1.879,160,0.841,161,1.091,162,2.197,163,0.841,164,1.091,165,0.841,166,0.841,167,0.841,168,0.841,169,0.841,170,2.029,171,0.841,172,0.841,173,3.132,174,3.132,175,0.841,176,3.132,177,0.841,178,2.676,179,1.429,180,0.841,181,2.179,182,1.429,183,0.841,184,1.863,185,0.841,186,0.841,187,0.841,188,0.841,189,3.004,190,3.004,191,3.004,192,2.197,193,3.566,194,2.294,195,3.004,196,1.429,197,0.841,198,1.429,199,0.642,200,0.841,201,0.841,202,0.841,203,0.841,204,0.841,205,0.841,206,1.429,207,1.091,208,0.642,209,0.841,210,0.841,211,0.841,212,2.197,213,0.841,214,0.841,215,0.841,216,0.841,217,0.841,218,0.841,219,0.841,220,0.841,221,0.841]],["title/modules/NgxNeoIndexedDbModule.html",[40,0.568,222,1.355]],["body/modules/NgxNeoIndexedDbModule.html",[2,0.749,3,0.749,6,0.579,12,1.64,13,0.084,17,2.395,18,1.787,25,0.053,27,1.445,38,0.066,39,0.066,40,0.749,42,1.445,43,1.004,79,1.445,127,1.57,222,2.395,223,2.941,224,3.633,225,3.633,226,2.941,227,2.941,228,2.941]],["title/classes/Utils.html",[25,0.04,129,1.095]],["body/classes/Utils.html",[2,0.782,3,0.782,6,0.604,13,0.082,24,2.053,25,0.068,38,0.068,39,0.068,43,0.782,54,0.986,55,1.833,63,1.974,68,2.267,71,1.223,129,1.833,229,2.345,230,3.731,231,4.018,232,3.071,233,3.071,234,3.071,235,3.071,236,3.071]],["title/coverage.html",[237,2.317]],["body/coverage.html",[0,0.992,1,1.232,6,0.608,7,1.879,13,0.08,25,0.073,38,0.068,39,0.068,52,1.519,53,2.361,71,1.232,122,1.519,123,1.232,124,2.361,127,1.232,128,2.361,129,1.519,170,1.879,229,2.361,237,2.361,238,3.092,239,3.092,240,3.092,241,4.29,242,3.092,243,3.092,244,3.746,245,3.092,246,3.092,247,3.092]],["title/dependencies.html",[41,1.316,248,1.866]],["body/dependencies.html",[13,0.074,38,0.074,39,0.074,41,1.746]],["title/index.html",[54,0.599,249,1.866,250,1.866]],["body/index.html",[0,0.364,12,0.729,13,0.083,22,1.606,23,1.762,24,1.603,25,0.033,34,0.866,36,1.946,38,0.033,39,0.033,42,0.557,54,0.848,56,0.866,63,0.557,66,1.885,70,2.506,72,1.606,79,1.874,82,2.131,83,1.112,91,1.112,92,0.866,96,0.866,97,2.214,98,0.689,100,2.214,102,2.018,108,2.407,123,0.452,125,0.689,126,0.689,127,1.053,130,1.758,131,2.214,132,2.214,133,0.866,134,0.866,135,0.866,136,0.866,137,2.593,140,0.866,141,2.75,142,3.054,145,0.866,147,0.866,149,0.866,150,1.398,151,1.398,153,0.866,155,0.866,157,0.866,158,0.866,159,1.398,161,0.866,164,0.866,170,0.689,181,2.678,194,2.865,199,1.398,207,2.018,208,0.866,251,1.134,252,1.831,253,0.866,254,1.134,255,1.134,256,1.134,257,1.831,258,1.134,259,1.134,260,3.602,261,2.302,262,1.831,263,3.683,264,2.302,265,1.134,266,2.302,267,1.831,268,2.302,269,1.134,270,1.134,271,2.302,272,1.134,273,3.683,274,1.134,275,1.831,276,1.134,277,1.134,278,1.134,279,3.507,280,1.134,281,1.134,282,1.134,283,2.643,284,1.134,285,1.134,286,1.134,287,1.831,288,1.831,289,1.134,290,1.134,291,3.507,292,3.602,293,1.134,294,1.134,295,1.134,296,1.134,297,1.831,298,1.134,299,1.831,300,1.134,301,1.831,302,1.134,303,1.134,304,2.9,305,2.9,306,3.602,307,1.134,308,1.134,309,1.134,310,1.831,311,3.263,312,2.9,313,2.302,314,2.9,315,1.134,316,1.134,317,1.134,318,1.134,319,1.134,320,1.134,321,1.134,322,1.134,323,1.134,324,2.302,325,1.831,326,1.831,327,1.831,328,1.134,329,2.643,330,1.134,331,1.134,332,1.134,333,1.134,334,1.134,335,1.134,336,0.866,337,1.134,338,1.134,339,1.134,340,1.134,341,1.134,342,1.134,343,1.134,344,1.134,345,1.134,346,1.134,347,1.134,348,1.134,349,1.134,350,1.134,351,1.134,352,1.134,353,2.302,354,1.134,355,1.134,356,1.134,357,1.831,358,1.134,359,1.134,360,1.134]],["title/modules.html",[40,0.773]],["body/modules.html",[13,0.072,16,2.086,28,1.367,38,0.072,39,0.072,40,0.874,222,2.086,361,3.432,362,3.432,363,3.985,364,3.432,365,3.432]],["title/overview.html",[366,2.317]],["body/overview.html",[0,0.999,1,1.76,13,0.076,25,0.057,26,1.892,27,1.529,28,1.712,30,1.892,38,0.068,39,0.068,40,0.958,41,1.529,42,1.529,43,0.793,44,2.377,45,2.377,46,2.377,47,2.872,48,2.377,49,2.377,91,2.286,122,1.529,253,2.377,336,2.377,366,2.377]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/DbWrapper.html":{},"interfaces/IndexDetails.html":{},"classes/NgxIDB.html":{},"modules/NgxNeoIndexedDbModule.html":{},"classes/Utils.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":241,"title":{},"body":{"coverage.html":{}}}],["0/1",{"_index":242,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":245,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":244,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":243,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":91,"title":{},"body":{"classes/DbWrapper.html":{},"index.html":{},"overview.html":{}}}],["1).then((person",{"_index":309,"title":{},"body":{"index.html":{}}}],["2",{"_index":253,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3",{"_index":336,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3).then",{"_index":339,"title":{},"body":{"index.html":{}}}],["abort",{"_index":112,"title":{},"body":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{}}}],["actual_compon",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["ad",{"_index":327,"title":{},"body":{"index.html":{}}}],["add",{"_index":130,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["add(storenam",{"_index":140,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["angular",{"_index":252,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":226,"title":{},"body":{"modules/NgxNeoIndexedDbModule.html":{}}}],["angular/cor",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/NgxNeoIndexedDbModule.html":{}}}],["angular/platform",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angular2",{"_index":255,"title":{},"body":{"index.html":{}}}],["api",{"_index":261,"title":{},"body":{"index.html":{}}}],["app",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":28,"title":{"modules/AppModule.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argument",{"_index":278,"title":{},"body":{"index.html":{}}}],["array",{"_index":199,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["auto",{"_index":325,"title":{},"body":{"index.html":{}}}],["autoincr",{"_index":298,"title":{},"body":{"index.html":{}}}],["avail",{"_index":365,"title":{},"body":{"modules.html":{}}}],["befor",{"_index":101,"title":{},"body":{"classes/DbWrapper.html":{}}}],["bootstrap",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["brows",{"_index":363,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules.html":{}}}],["browsermodul",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["callback",{"_index":288,"title":{},"body":{"index.html":{}}}],["class",{"_index":25,"title":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{},"classes/Utils.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/DbWrapper.html":{},"classes/NgxIDB.html":{},"modules/NgxNeoIndexedDbModule.html":{},"classes/Utils.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["classes/dbwrapp",{"_index":166,"title":{},"body":{"classes/NgxIDB.html":{}}}],["classes/indexdetail",{"_index":168,"title":{},"body":{"classes/NgxIDB.html":{}}}],["classes/util",{"_index":167,"title":{},"body":{"classes/NgxIDB.html":{}}}],["clear",{"_index":131,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["clear(storenam",{"_index":145,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["cluster_appmodul",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["commonmodul",{"_index":225,"title":{},"body":{"modules/NgxNeoIndexedDbModule.html":{}}}],["complet",{"_index":111,"title":{},"body":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{}}}],["complexx",{"_index":358,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["configur",{"_index":333,"title":{},"body":{"index.html":{}}}],["console.log('entri",{"_index":347,"title":{},"body":{"index.html":{}}}],["console.log(cursor.valu",{"_index":345,"title":{},"body":{"index.html":{}}}],["console.log(error",{"_index":311,"title":{},"body":{"index.html":{}}}],["console.log(peopl",{"_index":318,"title":{},"body":{"index.html":{}}}],["console.log(person",{"_index":310,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":63,"title":{},"body":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{},"classes/Utils.html":{},"index.html":{}}}],["constructor(dbnam",{"_index":64,"title":{},"body":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{}}}],["correspond",{"_index":337,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":237,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":99,"title":{},"body":{"classes/DbWrapper.html":{}}}],["createcallback",{"_index":282,"title":{},"body":{"index.html":{}}}],["createtransact",{"_index":60,"title":{},"body":{"classes/DbWrapper.html":{}}}],["createtransaction(opt",{"_index":76,"title":{},"body":{"classes/DbWrapper.html":{}}}],["creation",{"_index":290,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":207,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["cursor.continu",{"_index":346,"title":{},"body":{"index.html":{}}}],["cursor['continu",{"_index":210,"title":{},"body":{"classes/NgxIDB.html":{}}}],["cursorcallback",{"_index":158,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["cursorcallback(evt",{"_index":218,"title":{},"body":{"classes/NgxIDB.html":{}}}],["data",{"_index":351,"title":{},"body":{"index.html":{}}}],["databas",{"_index":100,"title":{},"body":{"classes/DbWrapper.html":{},"index.html":{}}}],["dave').then((person",{"_index":322,"title":{},"body":{"index.html":{}}}],["db",{"_index":56,"title":{},"body":{"classes/DbWrapper.html":{},"index.html":{}}}],["db.add('peopl",{"_index":328,"title":{},"body":{"index.html":{}}}],["db.clear('people').then",{"_index":352,"title":{},"body":{"index.html":{}}}],["db.delete('peopl",{"_index":338,"title":{},"body":{"index.html":{}}}],["db.getall('people').then((peopl",{"_index":317,"title":{},"body":{"index.html":{}}}],["db.getbyindex('peopl",{"_index":321,"title":{},"body":{"index.html":{}}}],["db.getbykey('peopl",{"_index":308,"title":{},"body":{"index.html":{}}}],["db.opencursor('peopl",{"_index":343,"title":{},"body":{"index.html":{}}}],["db.opendatabase(1",{"_index":293,"title":{},"body":{"index.html":{}}}],["db.update('peopl",{"_index":335,"title":{},"body":{"index.html":{}}}],["dbmode",{"_index":106,"title":{},"body":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{}}}],["dbname",{"_index":57,"title":{},"body":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{}}}],["dbversion",{"_index":58,"title":{},"body":{"classes/DbWrapper.html":{}}}],["dbwrapper",{"_index":52,"title":{"classes/DbWrapper.html":{}},"body":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{},"coverage.html":{}}}],["dbwrapper(dbnam",{"_index":172,"title":{},"body":{"classes/NgxIDB.html":{}}}],["declar",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/NgxNeoIndexedDbModule.html":{},"overview.html":{}}}],["default",{"_index":281,"title":{},"body":{"index.html":{}}}],["defin",{"_index":68,"title":{},"body":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{},"classes/Utils.html":{}}}],["delet",{"_index":132,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["delete(storenam",{"_index":147,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["depend",{"_index":41,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":202,"title":{},"body":{"classes/NgxIDB.html":{}}}],["detail",{"_index":315,"title":{},"body":{"index.html":{}}}],["direct",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["display",{"_index":348,"title":{},"body":{"index.html":{}}}],["document",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":4,"title":{},"body":{"components/AppComponent.html":{}}}],["don't",{"_index":334,"title":{},"body":{"index.html":{}}}],["dynam",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["e",{"_index":109,"title":{},"body":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{}}}],["e.target).error",{"_index":185,"title":{},"body":{"classes/NgxIDB.html":{}}}],["e.target).errorcod",{"_index":184,"title":{},"body":{"classes/NgxIDB.html":{}}}],["element",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["email",{"_index":304,"title":{},"body":{"index.html":{}}}],["enabl",{"_index":262,"title":{},"body":{"index.html":{}}}],["error",{"_index":108,"title":{},"body":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{},"index.html":{}}}],["event",{"_index":110,"title":{},"body":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{}}}],["evt",{"_index":159,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["evt.currenttarget.result.createobjectstor",{"_index":294,"title":{},"body":{"index.html":{}}}],["evt.target).result",{"_index":208,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["evt.target.result",{"_index":214,"title":{},"body":{"classes/NgxIDB.html":{}}}],["exampl",{"_index":292,"title":{},"body":{"index.html":{}}}],["exist",{"_index":105,"title":{},"body":{"classes/DbWrapper.html":{}}}],["export",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"classes/DbWrapper.html":{},"interfaces/IndexDetails.html":{},"classes/NgxIDB.html":{},"modules/NgxNeoIndexedDbModule.html":{},"classes/Utils.html":{},"overview.html":{}}}],["expos",{"_index":257,"title":{},"body":{"index.html":{}}}],["f",{"_index":350,"title":{},"body":{"index.html":{}}}],["fals",{"_index":302,"title":{},"body":{"index.html":{}}}],["file",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/DbWrapper.html":{},"interfaces/IndexDetails.html":{},"classes/NgxIDB.html":{},"modules/NgxNeoIndexedDbModule.html":{},"classes/Utils.html":{},"coverage.html":{}}}],["finish",{"_index":342,"title":{},"body":{"index.html":{}}}],["first",{"_index":273,"title":{},"body":{"index.html":{}}}],["follow",{"_index":275,"title":{},"body":{"index.html":{}}}],["forget",{"_index":280,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":228,"title":{},"body":{"modules/NgxNeoIndexedDbModule.html":{}}}],["function",{"_index":83,"title":{},"body":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{},"index.html":{}}}],["gener",{"_index":326,"title":{},"body":{"index.html":{}}}],["get",{"_index":249,"title":{"index.html":{}},"body":{}}],["getal",{"_index":133,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["getall(storenam",{"_index":149,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["getbyindex",{"_index":134,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["getbyindex(storenam",{"_index":153,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["getbykey",{"_index":135,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["getbykey(storenam",{"_index":155,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["given",{"_index":313,"title":{},"body":{"index.html":{}}}],["graph",{"_index":364,"title":{},"body":{"modules.html":{}}}],["group",{"_index":359,"title":{},"body":{"index.html":{}}}],["handl",{"_index":289,"title":{},"body":{"index.html":{}}}],["html",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["https://github.com/gilf/angular2",{"_index":256,"title":{},"body":{"index.html":{}}}],["i'm",{"_index":331,"title":{},"body":{"index.html":{}}}],["id",{"_index":297,"title":{},"body":{"index.html":{}}}],["idbdatabas",{"_index":73,"title":{},"body":{"classes/DbWrapper.html":{}}}],["idbfactori",{"_index":231,"title":{},"body":{"classes/Utils.html":{}}}],["idbkeyrang",{"_index":151,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["idbkeyrange.bound(\"a",{"_index":349,"title":{},"body":{"index.html":{}}}],["idbrequest",{"_index":196,"title":{},"body":{"classes/NgxIDB.html":{}}}],["idbtransact",{"_index":80,"title":{},"body":{"classes/DbWrapper.html":{}}}],["idbtransactionmod",{"_index":107,"title":{},"body":{"classes/DbWrapper.html":{}}}],["identifi",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["if(cursor",{"_index":344,"title":{},"body":{"index.html":{}}}],["import",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/NgxIDB.html":{},"modules/NgxNeoIndexedDbModule.html":{},"index.html":{}}}],["includ",{"_index":316,"title":{},"body":{"index.html":{}}}],["index",{"_index":54,"title":{"index.html":{}},"body":{"classes/DbWrapper.html":{},"interfaces/IndexDetails.html":{},"classes/NgxIDB.html":{},"classes/Utils.html":{},"index.html":{}}}],["index.get(key",{"_index":221,"title":{},"body":{"classes/NgxIDB.html":{}}}],["index.opencursor(keyrang",{"_index":205,"title":{},"body":{"classes/NgxIDB.html":{}}}],["indexdetail",{"_index":123,"title":{"interfaces/IndexDetails.html":{}},"body":{"interfaces/IndexDetails.html":{},"classes/NgxIDB.html":{},"coverage.html":{},"index.html":{}}}],["indexdetails.ord",{"_index":201,"title":{},"body":{"classes/NgxIDB.html":{}}}],["indexeddb",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Utils.html":{},"index.html":{}}}],["indexeddb';and",{"_index":272,"title":{},"body":{"index.html":{}}}],["indexnam",{"_index":125,"title":{},"body":{"interfaces/IndexDetails.html":{},"classes/NgxIDB.html":{},"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/DbWrapper.html":{},"interfaces/IndexDetails.html":{},"classes/NgxIDB.html":{},"modules/NgxNeoIndexedDbModule.html":{},"classes/Utils.html":{}}}],["instal",{"_index":266,"title":{},"body":{"index.html":{}}}],["instanti",{"_index":274,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":122,"title":{"interfaces/IndexDetails.html":{}},"body":{"interfaces/IndexDetails.html":{},"coverage.html":{},"overview.html":{}}}],["it'",{"_index":284,"title":{},"body":{"index.html":{}}}],["item",{"_index":312,"title":{},"body":{"index.html":{}}}],["iter",{"_index":340,"title":{},"body":{"index.html":{}}}],["key",{"_index":142,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["keypath",{"_index":296,"title":{},"body":{"index.html":{}}}],["keyrang",{"_index":150,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["legend",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["librari",{"_index":267,"title":{},"body":{"index.html":{}}}],["licens",{"_index":353,"title":{},"body":{"index.html":{}}}],["liter",{"_index":77,"title":{},"body":{"classes/DbWrapper.html":{}}}],["local",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/DbWrapper.html":{},"interfaces/IndexDetails.html":{},"classes/NgxIDB.html":{},"modules/NgxNeoIndexedDbModule.html":{},"classes/Utils.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":8,"title":{},"body":{"components/AppComponent.html":{}}}],["method",{"_index":59,"title":{},"body":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{}}}],["mit",{"_index":357,"title":{},"body":{"index.html":{}}}],["modifi",{"_index":324,"title":{},"body":{"index.html":{}}}],["modul",{"_index":40,"title":{"modules/AppModule.html":{},"modules/NgxNeoIndexedDbModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxNeoIndexedDbModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":224,"title":{},"body":{"modules/NgxNeoIndexedDbModule.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"classes/DbWrapper.html":{},"classes/NgxIDB.html":{},"index.html":{}}}],["need",{"_index":96,"title":{},"body":{"classes/DbWrapper.html":{},"index.html":{}}}],["neo",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{}}}],["new",{"_index":170,"title":{},"body":{"classes/NgxIDB.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":204,"title":{},"body":{"classes/NgxIDB.html":{}}}],["ngmodul",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/NgxNeoIndexedDbModule.html":{}}}],["ngx",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{}}}],["ngxidb",{"_index":127,"title":{"classes/NgxIDB.html":{}},"body":{"classes/NgxIDB.html":{},"modules/NgxNeoIndexedDbModule.html":{},"coverage.html":{},"index.html":{}}}],["ngxidb('mydb",{"_index":277,"title":{},"body":{"index.html":{}}}],["ngxneoindexeddbmodul",{"_index":222,"title":{"modules/NgxNeoIndexedDbModule.html":{}},"body":{"modules/NgxNeoIndexedDbModule.html":{},"modules.html":{}}}],["npm",{"_index":269,"title":{},"body":{"index.html":{}}}],["null",{"_index":93,"title":{},"body":{"classes/DbWrapper.html":{}}}],["number",{"_index":67,"title":{},"body":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{}}}],["object",{"_index":305,"title":{},"body":{"index.html":{}}}],["object'",{"_index":307,"title":{},"body":{"index.html":{}}}],["objectstor",{"_index":194,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["objectstore'",{"_index":319,"title":{},"body":{"index.html":{}}}],["objectstore.add(valu",{"_index":213,"title":{},"body":{"classes/NgxIDB.html":{}}}],["objectstore.clear",{"_index":219,"title":{},"body":{"classes/NgxIDB.html":{}}}],["objectstore.createindex(\"email",{"_index":303,"title":{},"body":{"index.html":{}}}],["objectstore.createindex(\"nam",{"_index":300,"title":{},"body":{"index.html":{}}}],["objectstore.get(key",{"_index":197,"title":{},"body":{"classes/NgxIDB.html":{}}}],["objectstore.index(indexdetails.indexnam",{"_index":200,"title":{},"body":{"classes/NgxIDB.html":{}}}],["objectstore.index(indexnam",{"_index":220,"title":{},"body":{"classes/NgxIDB.html":{}}}],["objectstore.opencursor(keyrang",{"_index":206,"title":{},"body":{"classes/NgxIDB.html":{}}}],["objectstore.put(valu",{"_index":216,"title":{},"body":{"classes/NgxIDB.html":{}}}],["objectstore/",{"_index":285,"title":{},"body":{"index.html":{}}}],["objectstore['delete'](key",{"_index":217,"title":{},"body":{"classes/NgxIDB.html":{}}}],["occur",{"_index":291,"title":{},"body":{"index.html":{}}}],["on",{"_index":287,"title":{},"body":{"index.html":{}}}],["open",{"_index":283,"title":{},"body":{"index.html":{}}}],["opencursor",{"_index":136,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["opencursor(storenam",{"_index":157,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["opendatabas",{"_index":98,"title":{},"body":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{},"index.html":{}}}],["opendatabase(vers",{"_index":161,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["option",{"_index":72,"title":{},"body":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{},"index.html":{}}}],["options.abort",{"_index":121,"title":{},"body":{"classes/DbWrapper.html":{}}}],["options.complet",{"_index":119,"title":{},"body":{"classes/DbWrapper.html":{}}}],["options.dbmod",{"_index":115,"title":{},"body":{"classes/DbWrapper.html":{}}}],["options.error",{"_index":117,"title":{},"body":{"classes/DbWrapper.html":{}}}],["order",{"_index":126,"title":{},"body":{"interfaces/IndexDetails.html":{},"classes/NgxIDB.html":{},"index.html":{}}}],["out",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":366,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":248,"title":{"dependencies.html":{}},"body":{}}],["pair",{"_index":323,"title":{},"body":{"index.html":{}}}],["paramet",{"_index":70,"title":{},"body":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{},"index.html":{}}}],["peopl",{"_index":295,"title":{},"body":{"index.html":{}}}],["platformbrowserdynam",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["platformbrowserdynamic().bootstrapmodule(appmodul",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["playground/index.t",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["plumb",{"_index":265,"title":{},"body":{"index.html":{}}}],["prev",{"_index":203,"title":{},"body":{"classes/NgxIDB.html":{}}}],["previou",{"_index":330,"title":{},"body":{"index.html":{}}}],["privat",{"_index":276,"title":{},"body":{"index.html":{}}}],["promis",{"_index":260,"title":{},"body":{"index.html":{}}}],["promise((resolv",{"_index":174,"title":{},"body":{"classes/NgxIDB.html":{}}}],["properti",{"_index":55,"title":{},"body":{"classes/DbWrapper.html":{},"interfaces/IndexDetails.html":{},"classes/NgxIDB.html":{},"classes/Utils.html":{}}}],["provid",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxNeoIndexedDbModule.html":{},"index.html":{},"overview.html":{}}}],["pure",{"_index":251,"title":{},"body":{"index.html":{}}}],["queri",{"_index":102,"title":{},"body":{"classes/DbWrapper.html":{},"index.html":{}}}],["readonli",{"_index":192,"title":{},"body":{"classes/NgxIDB.html":{}}}],["readwrit",{"_index":212,"title":{},"body":{"classes/NgxIDB.html":{}}}],["reject",{"_index":82,"title":{},"body":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{},"index.html":{}}}],["reject(",{"_index":193,"title":{},"body":{"classes/NgxIDB.html":{}}}],["reject('indexeddb",{"_index":183,"title":{},"body":{"classes/NgxIDB.html":{}}}],["reject('y",{"_index":95,"title":{},"body":{"classes/DbWrapper.html":{}}}],["reject(('objectstor",{"_index":104,"title":{},"body":{"classes/DbWrapper.html":{}}}],["releas",{"_index":354,"title":{},"body":{"index.html":{}}}],["request",{"_index":176,"title":{},"body":{"classes/NgxIDB.html":{}}}],["request.onerror",{"_index":182,"title":{},"body":{"classes/NgxIDB.html":{}}}],["request.onsuccess",{"_index":178,"title":{},"body":{"classes/NgxIDB.html":{}}}],["request.onupgradeneed",{"_index":187,"title":{},"body":{"classes/NgxIDB.html":{}}}],["request.result",{"_index":180,"title":{},"body":{"classes/NgxIDB.html":{}}}],["reset",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolv",{"_index":181,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["resolve((event.target).result",{"_index":198,"title":{},"body":{"classes/NgxIDB.html":{}}}],["resolve(result",{"_index":211,"title":{},"body":{"classes/NgxIDB.html":{}}}],["resolve(valu",{"_index":215,"title":{},"body":{"classes/NgxIDB.html":{}}}],["result",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/DbWrapper.html":{},"interfaces/IndexDetails.html":{},"classes/NgxIDB.html":{},"modules/NgxNeoIndexedDbModule.html":{},"classes/Utils.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["result.push(cursor.valu",{"_index":209,"title":{},"body":{"classes/NgxIDB.html":{}}}],["return",{"_index":79,"title":{},"body":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{},"modules/NgxNeoIndexedDbModule.html":{},"index.html":{}}}],["run",{"_index":268,"title":{},"body":{"index.html":{}}}],["s.a",{"_index":360,"title":{},"body":{"index.html":{}}}],["samplemodul",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["saveusag",{"_index":270,"title":{},"body":{"index.html":{}}}],["second",{"_index":279,"title":{},"body":{"index.html":{}}}],["selector",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["self",{"_index":173,"title":{},"body":{"classes/NgxIDB.html":{}}}],["self.dbwrapper.createtransact",{"_index":191,"title":{},"body":{"classes/NgxIDB.html":{}}}],["self.dbwrapper.db",{"_index":179,"title":{},"body":{"classes/NgxIDB.html":{}}}],["self.dbwrapper.validatebeforetransaction(storenam",{"_index":189,"title":{},"body":{"classes/NgxIDB.html":{}}}],["servic",{"_index":271,"title":{},"body":{"index.html":{}}}],["simpl",{"_index":259,"title":{},"body":{"index.html":{}}}],["someth",{"_index":329,"title":{},"body":{"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/DbWrapper.html":{},"interfaces/IndexDetails.html":{},"classes/NgxIDB.html":{},"modules/NgxNeoIndexedDbModule.html":{},"classes/Utils.html":{}}}],["src/classes/dbwrapper.t",{"_index":53,"title":{},"body":{"classes/DbWrapper.html":{},"coverage.html":{}}}],["src/classes/dbwrapper.ts:12",{"_index":88,"title":{},"body":{"classes/DbWrapper.html":{}}}],["src/classes/dbwrapper.ts:16",{"_index":84,"title":{},"body":{"classes/DbWrapper.html":{}}}],["src/classes/dbwrapper.ts:2",{"_index":74,"title":{},"body":{"classes/DbWrapper.html":{}}}],["src/classes/dbwrapper.ts:25",{"_index":78,"title":{},"body":{"classes/DbWrapper.html":{}}}],["src/classes/dbwrapper.ts:3",{"_index":75,"title":{},"body":{"classes/DbWrapper.html":{}}}],["src/classes/dbwrapper.ts:4",{"_index":69,"title":{},"body":{"classes/DbWrapper.html":{}}}],["src/classes/indexdetails.t",{"_index":124,"title":{},"body":{"interfaces/IndexDetails.html":{},"coverage.html":{}}}],["src/classes/utils.t",{"_index":229,"title":{},"body":{"classes/Utils.html":{},"coverage.html":{}}}],["src/classes/utils.ts:2",{"_index":230,"title":{},"body":{"classes/Utils.html":{}}}],["src/index.t",{"_index":223,"title":{},"body":{"modules/NgxNeoIndexedDbModule.html":{}}}],["src/ngxidb.t",{"_index":128,"title":{},"body":{"classes/NgxIDB.html":{},"coverage.html":{}}}],["src/ngxidb.ts:104",{"_index":143,"title":{},"body":{"classes/NgxIDB.html":{}}}],["src/ngxidb.ts:128",{"_index":165,"title":{},"body":{"classes/NgxIDB.html":{}}}],["src/ngxidb.ts:15",{"_index":163,"title":{},"body":{"classes/NgxIDB.html":{}}}],["src/ngxidb.ts:152",{"_index":148,"title":{},"body":{"classes/NgxIDB.html":{}}}],["src/ngxidb.ts:176",{"_index":160,"title":{},"body":{"classes/NgxIDB.html":{}}}],["src/ngxidb.ts:204",{"_index":146,"title":{},"body":{"classes/NgxIDB.html":{}}}],["src/ngxidb.ts:228",{"_index":154,"title":{},"body":{"classes/NgxIDB.html":{}}}],["src/ngxidb.ts:39",{"_index":156,"title":{},"body":{"classes/NgxIDB.html":{}}}],["src/ngxidb.ts:63",{"_index":152,"title":{},"body":{"classes/NgxIDB.html":{}}}],["src/ngxidb.ts:7",{"_index":139,"title":{},"body":{"classes/NgxIDB.html":{}}}],["src/ngxidb.ts:8",{"_index":138,"title":{},"body":{"classes/NgxIDB.html":{}}}],["start",{"_index":250,"title":{"index.html":{}},"body":{}}],["statement",{"_index":240,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":227,"title":{},"body":{"modules/NgxNeoIndexedDbModule.html":{}}}],["store",{"_index":306,"title":{},"body":{"index.html":{}}}],["storenam",{"_index":85,"title":{},"body":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{}}}],["string",{"_index":65,"title":{},"body":{"classes/DbWrapper.html":{},"interfaces/IndexDetails.html":{},"classes/NgxIDB.html":{}}}],["succe",{"_index":341,"title":{},"body":{"index.html":{}}}],["successfulli",{"_index":320,"title":{},"body":{"index.html":{}}}],["support",{"_index":361,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":362,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":247,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":246,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["term",{"_index":356,"title":{},"body":{"index.html":{}}}],["test",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["third",{"_index":314,"title":{},"body":{"index.html":{}}}],["this.db",{"_index":92,"title":{},"body":{"classes/DbWrapper.html":{},"index.html":{}}}],["this.db.objectstorenames.contains(storenam",{"_index":94,"title":{},"body":{"classes/DbWrapper.html":{}}}],["this.db.transaction(options.storenam",{"_index":114,"title":{},"body":{"classes/DbWrapper.html":{}}}],["this.dbnam",{"_index":89,"title":{},"body":{"classes/DbWrapper.html":{}}}],["this.dbvers",{"_index":90,"title":{},"body":{"classes/DbWrapper.html":{}}}],["this.dbwrapp",{"_index":171,"title":{},"body":{"classes/NgxIDB.html":{}}}],["this.dbwrapper.dbvers",{"_index":175,"title":{},"body":{"classes/NgxIDB.html":{}}}],["this.indexeddb",{"_index":232,"title":{},"body":{"classes/Utils.html":{}}}],["this.util",{"_index":169,"title":{},"body":{"classes/NgxIDB.html":{}}}],["this.utils.indexeddb.open(this.dbwrapper.dbnam",{"_index":177,"title":{},"body":{"classes/NgxIDB.html":{}}}],["this.validatestorename(storenam",{"_index":103,"title":{},"body":{"classes/DbWrapper.html":{}}}],["tran",{"_index":113,"title":{},"body":{"classes/DbWrapper.html":{}}}],["trans.onabort",{"_index":120,"title":{},"body":{"classes/DbWrapper.html":{}}}],["trans.oncomplet",{"_index":118,"title":{},"body":{"classes/DbWrapper.html":{}}}],["trans.onerror",{"_index":116,"title":{},"body":{"classes/DbWrapper.html":{}}}],["transact",{"_index":190,"title":{},"body":{"classes/NgxIDB.html":{}}}],["transaction.objectstore(storenam",{"_index":195,"title":{},"body":{"classes/NgxIDB.html":{}}}],["tree",{"_index":5,"title":{},"body":{"components/AppComponent.html":{}}}],["true",{"_index":299,"title":{},"body":{"index.html":{}}}],["type",{"_index":71,"title":{},"body":{"classes/DbWrapper.html":{},"interfaces/IndexDetails.html":{},"classes/NgxIDB.html":{},"classes/Utils.html":{},"coverage.html":{}}}],["typeof",{"_index":186,"title":{},"body":{"classes/NgxIDB.html":{}}}],["undefin",{"_index":332,"title":{},"body":{"index.html":{}}}],["under",{"_index":355,"title":{},"body":{"index.html":{}}}],["uniqu",{"_index":301,"title":{},"body":{"index.html":{}}}],["updat",{"_index":137,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["update(storenam",{"_index":164,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["upgrad",{"_index":286,"title":{},"body":{"index.html":{}}}],["upgradecallback",{"_index":162,"title":{},"body":{"classes/NgxIDB.html":{}}}],["upgradecallback(",{"_index":188,"title":{},"body":{"classes/NgxIDB.html":{}}}],["us",{"_index":97,"title":{},"body":{"classes/DbWrapper.html":{},"index.html":{}}}],["usag",{"_index":263,"title":{},"body":{"index.html":{}}}],["util",{"_index":129,"title":{"classes/Utils.html":{}},"body":{"classes/NgxIDB.html":{},"classes/Utils.html":{},"coverage.html":{}}}],["validatebeforetransact",{"_index":61,"title":{},"body":{"classes/DbWrapper.html":{}}}],["validatebeforetransaction(storenam",{"_index":81,"title":{},"body":{"classes/DbWrapper.html":{}}}],["validatestorenam",{"_index":62,"title":{},"body":{"classes/DbWrapper.html":{}}}],["validatestorename(storenam",{"_index":87,"title":{},"body":{"classes/DbWrapper.html":{}}}],["valu",{"_index":141,"title":{},"body":{"classes/NgxIDB.html":{},"index.html":{}}}],["var",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["veri",{"_index":258,"title":{},"body":{"index.html":{}}}],["version",{"_index":66,"title":{},"body":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{},"index.html":{}}}],["void",{"_index":86,"title":{},"body":{"classes/DbWrapper.html":{},"classes/NgxIDB.html":{}}}],["window).mozindexeddb",{"_index":234,"title":{},"body":{"classes/Utils.html":{}}}],["window).msindexeddb",{"_index":236,"title":{},"body":{"classes/Utils.html":{}}}],["window).webkitindexeddb",{"_index":235,"title":{},"body":{"classes/Utils.html":{}}}],["window.indexeddb",{"_index":233,"title":{},"body":{"classes/Utils.html":{}}}],["without",{"_index":264,"title":{},"body":{"index.html":{}}}],["work",{"_index":254,"title":{},"body":{"index.html":{}}}],["ye",{"_index":144,"title":{},"body":{"classes/NgxIDB.html":{}}}],["zoom",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    playground/index.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { SampleModule }  from 'ngx-neo-indexeddb';\n\n@Component({\n  selector: 'app',\n  template: ``\n})\nclass AppComponent {}\n\n@NgModule({\n  bootstrap: [ AppComponent ],\n  declarations: [ AppComponent ],\n  imports: [ BrowserModule, SampleModule ]\n})\nclass AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            playground/index.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /**\n * This is only for local test\n */\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { SampleModule }  from 'ngx-neo-indexeddb';\n\n@Component({\n  selector: 'app',\n  template: ``\n})\nclass AppComponent {}\n\n@NgModule({\n  bootstrap: [ AppComponent ],\n  declarations: [ AppComponent ],\n  imports: [ BrowserModule, SampleModule ]\n})\nclass AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DbWrapper.html":{"url":"classes/DbWrapper.html","title":"class - DbWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DbWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/classes/dbWrapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                db\n                            \n                            \n                                dbName\n                            \n                            \n                                dbVersion\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTransaction\n                            \n                            \n                                validateBeforeTransaction\n                            \n                            \n                                validateStoreName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dbName: string, version: number)\n                    \n                \n                        \n                            \n                                Defined in src/classes/dbWrapper.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dbName\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            db\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        db:     IDBDatabase\n\n                    \n                \n                    \n                        \n                            Type :     IDBDatabase\n\n                        \n                    \n                        \n                            \n                                    Defined in src/classes/dbWrapper.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dbName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dbName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/classes/dbWrapper.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dbVersion\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dbVersion:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/classes/dbWrapper.ts:3\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createTransaction\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTransaction(options: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/classes/dbWrapper.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IDBTransaction\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateBeforeTransaction\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateBeforeTransaction(storeName: string, reject: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/classes/dbWrapper.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storeName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        reject\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateStoreName\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateStoreName(storeName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/classes/dbWrapper.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storeName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class DbWrapper {\n    dbName: string;\n    dbVersion: number;\n    db: IDBDatabase;\n\n    constructor(dbName: string, version: number) {\n        this.dbName = dbName;\n        this.dbVersion = version || 1;\n        this.db = null;\n    }\n\n    validateStoreName(storeName: string) {\n        return this.db.objectStoreNames.contains(storeName);\n    }\n\n    validateBeforeTransaction(storeName: string, reject: Function) {\n        if (!this.db) {\n            reject('You need to use the openDatabase function to create a database before you query it!');\n        }\n        if (!this.validateStoreName(storeName)) {\n            reject(('objectStore does not exists: ' + storeName));\n        }\n    }\n\n    createTransaction(options: { storeName: string, dbMode: IDBTransactionMode, error: (e: Event) => any, complete: (e: Event) => any, abort?: (e: Event) => any }): IDBTransaction {\n        let trans: IDBTransaction = this.db.transaction(options.storeName, options.dbMode);\n        trans.onerror = options.error;\n        trans.oncomplete = options.complete;\n        trans.onabort = options.abort;\n        return trans;\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IndexDetails.html":{"url":"interfaces/IndexDetails.html","title":"interface - IndexDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IndexDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/classes/indexDetails.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        indexName\n                                \n                                \n                                        order\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        indexName\n                                    \n                                \n                                \n                                    \n                                        indexName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IndexDetails {\n    indexName: string;\n    order: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgxIDB.html":{"url":"classes/NgxIDB.html","title":"class - NgxIDB","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgxIDB\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngxIDB.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dbWrapper\n                            \n                            \n                                utils\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                clear\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getByIndex\n                            \n                            \n                                getByKey\n                            \n                            \n                                openCursor\n                            \n                            \n                                openDatabase\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dbName: string, version: number)\n                    \n                \n                        \n                            \n                                Defined in src/ngxIDB.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dbName\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dbWrapper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dbWrapper:     DbWrapper\n\n                    \n                \n                    \n                        \n                            Type :     DbWrapper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngxIDB.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            utils\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        utils:     Utils\n\n                    \n                \n                    \n                        \n                            Type :     Utils\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngxIDB.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(storeName: string, value: any, key?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngxIDB.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storeName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear(storeName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngxIDB.ts:204\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storeName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete(storeName: string, key: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngxIDB.ts:152\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storeName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAll(storeName: string, keyRange?: IDBKeyRange, indexDetails?: IndexDetails)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngxIDB.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storeName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        keyRange\n                                                        \n                                                                    IDBKeyRange\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        indexDetails\n                                                        \n                                                                    IndexDetails\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getByIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetByIndex(storeName: string, indexName: string, key: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngxIDB.ts:228\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storeName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        indexName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getByKey\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetByKey(storeName: string, key: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngxIDB.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storeName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openCursor\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenCursor(storeName: string, cursorCallback: (evt: Event) => void, keyRange?: IDBKeyRange)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngxIDB.ts:176\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storeName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cursorCallback\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        keyRange\n                                                        \n                                                                    IDBKeyRange\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDatabase\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDatabase(version: number, upgradeCallback?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngxIDB.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        version\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        upgradeCallback\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(storeName: string, value: any, key?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngxIDB.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storeName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DbWrapper } from './classes/dbWrapper';\nimport { Utils } from './classes/utils';\nimport { IndexDetails } from './classes/indexDetails';\n\n\nexport class NgxIDB {\n  utils: Utils;\n  dbWrapper: DbWrapper;\n\n  constructor(dbName: string, version: number) {\n    this.utils = new Utils();\n    this.dbWrapper = new DbWrapper(dbName, version);\n  }\n\n  openDatabase(version: number, upgradeCallback?: Function) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      this.dbWrapper.dbVersion = version;\n      let request = this.utils.indexedDB.open(this.dbWrapper.dbName, version);\n      request.onsuccess = function (e) {\n        self.dbWrapper.db = request.result;\n        resolve();\n      };\n\n      request.onerror = function (e) {\n        reject('IndexedDB error: ' + (e.target).errorCode ?\n          (e.target).errorCode + ' (' + (e.target).error + ')' :\n          (e.target).errorCode);\n      };\n\n      if (typeof upgradeCallback === 'function') {\n        request.onupgradeneeded = function (e) {\n          upgradeCallback(e, self.dbWrapper.db);\n        };\n      }\n    });\n  }\n\n  getByKey(storeName: string, key: any) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      self.dbWrapper.validateBeforeTransaction(storeName, reject);\n\n      let transaction = self.dbWrapper.createTransaction({\n        storeName: storeName,\n        dbMode: 'readonly',\n        error: (e: Event) => {\n          reject(e);\n        },\n        complete: (e: Event) => {\n        }\n      }),\n        objectStore = transaction.objectStore(storeName),\n        request: IDBRequest;\n\n      request = objectStore.get(key);\n      request.onsuccess = function (event: Event) {\n        resolve((event.target).result);\n      }\n    });\n  }\n\n  getAll(storeName: string, keyRange?: IDBKeyRange, indexDetails?: IndexDetails) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      self.dbWrapper.validateBeforeTransaction(storeName, reject);\n\n      let transaction = self.dbWrapper.createTransaction({\n        storeName: storeName,\n        dbMode: 'readonly',\n        error: (e: Event) => {\n          reject(e);\n        },\n        complete: (e: Event) => {\n        }\n      }),\n        objectStore = transaction.objectStore(storeName),\n        result: Array = [],\n        request: IDBRequest;\n      if (indexDetails) {\n        let index = objectStore.index(indexDetails.indexName),\n          order = (indexDetails.order === 'desc') ? 'prev' : 'next';\n        request = index.openCursor(keyRange, order);\n      } else {\n        request = objectStore.openCursor(keyRange);\n      }\n\n      request.onerror = function (e) {\n        reject(e);\n      };\n\n      request.onsuccess = function (evt: Event) {\n        let cursor = (evt.target).result;\n        if (cursor) {\n          result.push(cursor.value);\n          cursor['continue']();\n        } else {\n          resolve(result);\n        }\n      };\n    });\n  }\n\n  add(storeName: string, value: any, key?: any) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      self.dbWrapper.validateBeforeTransaction(storeName, reject);\n\n      let transaction = self.dbWrapper.createTransaction({\n        storeName: storeName,\n        dbMode: 'readwrite',\n        error: (e: Event) => {\n          reject(e);\n        },\n        complete: (e: Event) => {\n          resolve({ key: key, value: value });\n        }\n      }),\n        objectStore = transaction.objectStore(storeName);\n\n      let request = objectStore.add(value, key);\n      request.onsuccess = (evt: any) => {\n        key = evt.target.result;\n      };\n    });\n  }\n\n  update(storeName: string, value: any, key?: any) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      self.dbWrapper.validateBeforeTransaction(storeName, reject);\n\n      let transaction = self.dbWrapper.createTransaction({\n        storeName: storeName,\n        dbMode: 'readwrite',\n        error: (e: Event) => {\n          reject(e);\n        },\n        complete: (e: Event) => {\n          resolve(value);\n        },\n        abort: (e: Event) => {\n          reject(e);\n        }\n      }),\n        objectStore = transaction.objectStore(storeName);\n\n      objectStore.put(value, key);\n    });\n  }\n\n  delete(storeName: string, key: any) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      self.dbWrapper.validateBeforeTransaction(storeName, reject);\n\n      let transaction = self.dbWrapper.createTransaction({\n        storeName: storeName,\n        dbMode: 'readwrite',\n        error: (e: Event) => {\n          reject(e);\n        },\n        complete: (e: Event) => {\n          resolve();\n        },\n        abort: (e: Event) => {\n          reject(e);\n        }\n      }),\n        objectStore = transaction.objectStore(storeName);\n\n      objectStore['delete'](key);\n    });\n  }\n\n  openCursor(storeName: string, cursorCallback: (evt: Event) => void, keyRange?: IDBKeyRange) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      self.dbWrapper.validateBeforeTransaction(storeName, reject);\n\n      let transaction = self.dbWrapper.createTransaction({\n        storeName: storeName,\n        dbMode: 'readonly',\n        error: (e: Event) => {\n          reject(e);\n        },\n        complete: (e: Event) => {\n          resolve();\n        },\n        abort: (e: Event) => {\n          reject(e);\n        }\n      }),\n        objectStore = transaction.objectStore(storeName),\n        request = objectStore.openCursor(keyRange);\n\n      request.onsuccess = (evt: Event) => {\n        cursorCallback(evt);\n        resolve();\n      };\n    });\n  }\n\n  clear(storeName: string) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      self.dbWrapper.validateBeforeTransaction(storeName, reject);\n\n      let transaction = self.dbWrapper.createTransaction({\n        storeName: storeName,\n        dbMode: 'readwrite',\n        error: (e: Event) => {\n          reject(e);\n        },\n        complete: (e: Event) => {\n          resolve();\n        },\n        abort: (e: Event) => {\n          reject(e);\n        }\n      }),\n        objectStore = transaction.objectStore(storeName);\n      objectStore.clear();\n      resolve();\n    });\n  }\n\n  getByIndex(storeName: string, indexName: string, key: any) {\n    let self = this;\n    return new Promise((resolve, reject) => {\n      self.dbWrapper.validateBeforeTransaction(storeName, reject);\n\n      let transaction = self.dbWrapper.createTransaction({\n        storeName: storeName,\n        dbMode: 'readonly',\n        error: (e: Event) => {\n          reject(e);\n        },\n        abort: (e: Event) => {\n          reject(e);\n        },\n        complete: (e: Event) => {\n        }\n      }),\n        objectStore = transaction.objectStore(storeName),\n        index = objectStore.index(indexName),\n        request = index.get(key);\n\n      request.onsuccess = (event) => {\n        resolve((event.target).result);\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxNeoIndexedDbModule.html":{"url":"modules/NgxNeoIndexedDbModule.html","title":"module - NgxNeoIndexedDbModule","body":"\n                   \n\n\n\n\n  Modules\n  NgxNeoIndexedDbModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/index.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgxIDB } from './NgxIDB';\n\nexport * from './NgxIDB';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n  ],\n  exports: [ ]\n})\nexport class NgxNeoIndexedDbModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxNeoIndexedDbModule,\n      providers: []\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utils.html":{"url":"classes/Utils.html","title":"class - Utils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/classes/utils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                indexedDB\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/classes/utils.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            indexedDB\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        indexedDB:     IDBFactory\n\n                    \n                \n                    \n                        \n                            Type :     IDBFactory\n\n                        \n                    \n                        \n                            \n                                    Defined in src/classes/utils.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Utils {\n    indexedDB: IDBFactory;\n    constructor() {\n        this.indexedDB = window.indexedDB || (window).mozIndexedDB || (window).webkitIndexedDB || (window).msIndexedDB;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    playground/index.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/classes/dbWrapper.ts\n            \n            \n                class\n            \n            \n                DbWrapper\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/classes/indexDetails.ts\n            \n            \n                interface\n            \n            \n                IndexDetails\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/classes/utils.ts\n            \n            \n                class\n            \n            \n                Utils\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/ngxIDB.ts\n            \n            \n                class\n            \n            \n                NgxIDB\n            \n            \n                0 %\n                (0/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-neo-indexeddb\n==============\nngx-neo-indexeddb is a pure Angular >= 2 working version of angular2-indexeddb https://github.com/gilf/angular2-indexeddb.\nIt exposes very simple promises API to enable the usage of IndexedDB without most of it plumbing.\nInstallation\nTo install this library, run:\n$ npm install ngx-neo-indexeddb --saveUsage\nThen, in any angular component or service import library\nimport { NgxIDB } from 'ngx-neo-indexeddb';and use it.\nNgxIDB Class\nFirst instantiate the class as follows:\nprivate db: NgxIDB;\n\nconstructor() {\n  this.db = new NgxIDB('myDb', 1);\n}The first argument is the name of your database and the second is the database version.\nIf you forget the version you the service will default to version 1.\nUse the APIs that the NgxIDB service exposes to use indexeddb.\nIn the API the following functions:\n\nopenDatabase(version, createCallback): opens the database for usage and update it's objectStore/s.\nThe first parameter is the version to upgrade the database and the second one is an optional callback that will handle the creation of objectStores for that version if needed.\nopenDatabase returns a promise that is resolved when the database is open or updated or rejected if an error occurred.\n\nUsage example:\ndb.openDatabase(1, (evt) => {\n    let objectStore = evt.currentTarget.result.createObjectStore(\n        'people', { keyPath: \"id\", autoIncrement: true });\n\n    objectStore.createIndex(\"name\", \"name\", { unique: false });\n    objectStore.createIndex(\"email\", \"email\", { unique: true });\n});\ngetByKey(storeName, key): returns the object that is stored in the objectStore by its key.\nThe first parameter is the store name to query and the second one is the object's key.\ngetByKey returns a promise that is resolved when we have the object or rejected if an error occurred.\n\nUsage example:\ndb.getByKey('people', 1).then((person) => {\n    console.log(person);\n}, (error) => {\n    console.log(error);\n});\ngetAll(storeName, keyRange, indexDetails): returns an array of all the items in the given objectStore.\nThe first parameter is the store name to query.\nThe second parameter is an optional IDBKeyRange object.\nThe third parameter is an index details which must include index name and an optional order parameter.\ngetAll returns a promise that is resolved when we have the array of items or rejected if an error occurred.\n\nUsage example:\ndb.getAll('people').then((people) => {\n    console.log(people);\n}, (error) => {\n    console.log(error);\n});\ngetByIndex(storeName, indexName, key): returns an stored item using an objectStore's index.\nThe first parameter is the store name to query, the second parameter is the index and third parameter is the item to query.\ngetByIndex returns a promise that is resolved when the item successfully returned or rejected if an error occurred.\n\nUsage example:\ndb.getByIndex('people', 'name', 'Dave').then((person) => {\n    console.log(person);\n}, (error) => {\n    console.log(error);\n});\nadd(storeName, value, key): Adds to the given objectStore the key and value pair.\nThe first parameter is the store name to modify, the second parameter is the value and the third parameter is the key (if not auto-generated).\nadd returns a promise that is resolved when the value was added or rejected if an error occurred.\n\nUsage example (add without a key):\ndb.add('people', { name: 'name', email: 'email' }).then(() => {\n    // Do something after the value was added\n}, (error) => {\n    console.log(error);\n});In the previous example I'm using undefined as the key because the key is configured in the objectStore as auto-generated.\n\nupdate(storeName, value, key?): Updates the given value in the objectStore.\nThe first parameter is the store name to modify, the second parameter is the value to update and the third parameter is the key (if there is no key don't provide it).\nupdate returns a promise that is resolved when the value was updated or rejected if an error occurred.\n\nUsage example (update without a key):\ndb.update('people', { id: 3, name: 'name', email: 'email' }).then(() => {\n    // Do something after update\n}, (error) => {\n    console.log(error);\n});\ndelete(storeName, key): deletes the object that correspond with the key from the objectStore.\nThe first parameter is the store name to modify and the second parameter is the key to delete.\ndelete returns a promise that is resolved when the value was deleted or rejected if an error occurred.\n\nUsage example:\ndb.delete('people', 3).then(() => {\n    // Do something after delete\n}, (error) => {\n    console.log(error);\n});\nopenCursor(storeName, cursorCallback, keyRange): opens an objectStore cursor to enable iterating on the objectStore.\nThe first parameter is the store name, the second parameter is a callback function to run when the cursor succeeds to be opened and the third parameter is optional IDBKeyRange object.\nopenCursor returns a promise that is resolved when the cursor finishes running or rejected if an error occurred.\n\nUsage example:\ndb.openCursor('people', (evt) => {\n    var cursor = (evt.target).result;\n    if(cursor) {\n        console.log(cursor.value);\n        cursor.continue();\n    } else {\n        console.log('Entries all displayed.');\n    }\n}, IDBKeyRange.bound(\"A\", \"F\"));\n\nclear(storeName): clears all the data in an objectStore.\nThe first parameter is the store name to clear.\nclear returns a promise that is resolved when the objectStore was cleared or rejected if an error occurred.\n\nUsage example:\ndb.clear('people').then(() => {\n    // Do something after clear\n}, (error) => {\n    console.log(error);\n});\nLicense\nReleased under the terms of the MIT License.\nLicense\nMIT © Neo Complexx Group S.A\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxNeoIndexedDbModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            2 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        1 component\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 interface\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
